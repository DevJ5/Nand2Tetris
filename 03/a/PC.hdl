// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl


/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=realload);

    Mux16(a=false, b=in, sel=realload, out=w1); // Load || Reset  - Of in of allemaal 0

    Or(a=load, b=reset, out=loadOrReset);

    Inc16(in=prevout, out=geincremente);

    Not(in=loadOrReset, out=notLoadOrReset);
    And(a=notLoadOrReset, b=inc, out=realinc);

    Mux16(a=w1, b=geincremente, sel=realinc, out=realin);

    Or(a=loadOrReset, b=inc, out=toload); // Load || Reset || Inc -> Load
    Register(in=realin, load=toload, out=prevout, out=out);

}
